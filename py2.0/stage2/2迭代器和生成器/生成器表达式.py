# 生成器表达式和列表表达式差不多，只是把[]换为()即可：

L = [x * x for x in range(10)]
g = (x * x for x in range(10))
print(type(L))  # <class 'list'>
print(type(g))  # <class 'generator'>

for i in g:
    print("生成器", i)
# 生成器表达式也可以进行筛选(同列表推导式）
# 请记住生成器表达式和列表表达式在输出的时候区别，列表输出为列表，生成器则不是
"""
生成器表达式和列表推导式的区别：

1. 列表推导式比较耗内存，一次性加载。生成器表达式几乎不占用内存，使用的时候才分配和使用内存。

2. 得到的值不一样，列表推导式得到的是一个列表，生成器表达式获取的是一个生成器，但是你可以遍历输出。
总结：生成器具有惰性机制，生成器只有在访问时候才取值（面试专用）。
"""