自动化测试：广义上通过测试工具来执行的测试过程叫自动化测试
            狭义上指功能测试自动化

---什么样的项目适合自动化测试：
1. 比较频繁的回归测试
2. 系统界面稳定，变动少
3. 软件维护周期长
4. 敏捷、持续集成的开发模式，每日构建后的测试验证（冒烟测试）

Selenium是专用于做web测试的一款轻便、开源、免费的功能自动化测试工具

---Selenium1.0
   构成：Selenium IDE+Selenium Core+Selenium Reomote Control

---Selenium2.0
   构成：Selenium1.0+WebDriver

---Selenium 3.0
   For Java 8

---Selenium IDE安装：
步骤：
1. 工具--附加组件
2. 选择从文件安装附加组件
3. 选择IDE，安装
4. 重启火狐


--协同办公的第一个IDE脚本 登录登出



---Selenium IDE界面简介：

主要操作按钮---
Base URL：指录制的网页URL地址，一般写到端口号之前的url地址
录制按钮：右上方红色按钮，默认就是录制状态，录完后及时点击停止
执行单条测试用例：只执行选中的测试用例
执行多条测试用例：执行test case栏中所有的测试用例
Fast-Slow：调节回放脚本时的速度


Test case栏---
存放测试用例
显示运行结果，绿色为通过，红色为失败


Table脚本栏--
显示录制或编写的测试脚本
Command： Selenium命令，如点击、输入、打开网页等
Target： 要操作的页面元素
Value：页面元素的值，如向输入框中输入一些文字

Select与Find按钮
Select：点击要识别的页面元素，并自动在IDE的target中生成识别的定位脚本
Find：检查target内容是否正确定位到预期的页面元素，找到后会黄色高亮显示。

Log与Reference栏---
Log栏显示脚本回放时的日志记录，黑色表示通过，红色Error表示脚本不通过。
Reference：参考，当选中Selenium命令时，面板中会给出此命令的具体语法与应用，相当于快速帮助。


---回放与调试脚本---
设置断点 toggle breakpoint 取消再点击一次toggle breakpoint即可。


---Selenium IDE的基本元素识别--

准备：先安装Firebug，再安装Firepath
装完之后在火狐中工具栏会出现一个虫子标志，结合协同办公OA的页面，点击后会出现控制台的部分。

1. 通过ID识别网页元素（效率高、精准）
ID：页面元素的属性，在一个页面中ID名不可重复，即id在一个页面中是唯一的。
写法： id=id locator（id属性值）
适用于：有id属性的元素

2. 通过name属性定位
name属性：同一页面中可以不唯一，找到页面元素中具有相同name属性的第一个元素。
语法：name=name locator（name属性值）
适用于：有name属性的元素

3. 对超链接进行定位
适用于文字超链接
语法：link=超链接文字

4. CSS Locator
写法：css=css样式定位字符串
结合属性对元素定位：E[foo="bar"] 
css=input[class="input-text"]

id用#表示  E#myid
css=input#subject

class属性用.表示  E.warning

加属性精准匹配 css=input.input-text[id="trackInput"]


contains很好用 css=a.black:contains("即时消息")

练习：将录制的第一个脚本登录登出改成全部用css locator表达式来定位

5. 通过xpath定位网页元素
写法：xpath表达式   以“//”开头  

通过属性定位：  //input[@class='classname']
通过属性组合定位： //input[@class='classname' and @name='name属性值']

---Selenium IDE命令_操作类
--Open命令
open（url）
url：要打开的url地址，可以是绝对路径，也可以是相对路径

--Click命令
click（locator）
locator：网页元素，如：超链接、按钮、单选按钮、复选框


--clickAndWait
clickAndWait（locator）

如果点击会激活一个新页面（超链接），此命令会等待新的页面加载完成才执行下一条命令，click命令不会等待，直接执行下一条命令。

--type命令
type（locator，value）
locator：网页元素，常指文本输入框
value：文本框中输入的值

--Select命令
select(locator,optionLocator)
locator: 网页元素下拉菜单
optionLocator：下拉菜单中的一个下拉项
     下拉选项定位写法： label=下拉菜单项的名字  （默认）
                        value=下拉菜单项value的值

---用于等待的命令---
--Pause命令
pause（waitTime）
waitTime--暂停的时间  单位是毫秒  1秒=1000毫秒   2000

pause一般在调试脚本时使用，是一个绝对的等待。


--waitForPageToLoad(timeout)

timeout--超时设定，在设定的时间内新页面还没加载则脚本报错


--waitForElementPresent命令
waitForElementPresent（locator）
locator：等待的网页元素
当找到页面元素时，等待命令脚本通过，执行下一个步骤；当等待超过（默认为30S）默认设置的等待时间时，脚本报错。


发布公告综合练习：
步骤：
1. 输入用户名与密码
2. 点击 登录 按钮
3. 点击 公共信息
4. 点击 发布公告
5. 输入公告标题  公告007
6. 点击 发布范围， 选择“全部员工”
7. 点击 “发布”按钮
8. 点击发布成功的 确定 按钮
9. 点击 退出登录，退出系统

验收标准：
初级：在慢速slow状态下，脚本回放成功，系统中增加一条公告记录。
终极：在快速fast状态下，脚本回放成功，系统中增加一条公告记录。

---Selenium命令_断言
断言：类似于检查点，用于验证与预期结果是否相符


Assert：验证失败时脚本会终止
assertText（locator，pattern）
pattern：网页元素的值，一般为匹配的文本值

Verify：验证失败时脚本会继续执行
verifyText（locator，pattern）
pattern：网页元素的值，一般为匹配的文本值